#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ Configurando banco de dados Hot Wheels...\n');

// Verificar se DATABASE_URL est√° configurada
const envPath = path.join(__dirname, '..', '.env.local');
if (!fs.existsSync(envPath)) {
  console.error('‚ùå Arquivo .env.local n√£o encontrado!');
  console.log('üìù Crie o arquivo .env.local com a DATABASE_URL do Neon');
  process.exit(1);
}

const envContent = fs.readFileSync(envPath, 'utf8');
if (!envContent.includes('neon.tech') && !envContent.includes('supabase.co')) {
  console.log('‚ö†Ô∏è  DATABASE_URL parece ser local. Configure um banco online:');
  console.log('   ‚Ä¢ Neon: https://neon.tech (recomendado)');
  console.log('   ‚Ä¢ Supabase: https://supabase.com');
  console.log('   ‚Ä¢ Railway: https://railway.app\n');
}

try {
  console.log('üì¶ Instalando depend√™ncias...');
  execSync('npm install', { stdio: 'inherit' });

  console.log('\nüîÑ Executando migra√ß√µes...');
  execSync('npm run db:push', { stdio: 'inherit' });

  console.log('\n‚úÖ Banco configurado com sucesso!');
  console.log('üéØ Pr√≥ximos passos:');
  console.log('   1. npm run dev - Iniciar servidor');
  console.log('   2. npm run db:studio - Abrir Drizzle Studio');
  console.log('   3. Acessar http://localhost:3000\n');

} catch (error) {
  console.error('\n‚ùå Erro na configura√ß√£o:', error.message);
  console.log('\nüîß Solu√ß√µes:');
  console.log('   1. Verifique se a DATABASE_URL est√° correta');
  console.log('   2. Teste a conex√£o no dashboard do Neon');
  console.log('   3. Execute: npm run db:push manualmente');
  process.exit(1);
}
